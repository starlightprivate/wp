worker_processes 3;
events { worker_connections 1024; }

http {
  upstream node-app {
    server app-server:8000;
    keepalive 64;
  }
  upstream wordpress-app {
    server wp:8080;
    keepalive 64;
  }
  server_tokens off;
  include /etc/nginx/blockuseragents.rules;
  
  # X-Frame-Options is to prevent from clickJacking attack
  add_header X-Frame-Options SAMEORIGIN;
  add_header Referrer-Header  "same-origin"; 
  #  disable content-type sniffing on some browsers.
  add_header X-Content-Type-Options "nosniff";
  # This header enables the Cross-site scripting (XSS) filter
  add_header X-XSS-Protection "1; mode=block";
  # This will enforce HTTP browsing into HTTPS and avoid ssl stripping attack
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

  proxy_cache_path /var/run/cache levels=1:2 keys_zone=STATIC:10m max_size=100m;
  proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
  proxy_cache_valid 200 60m;
  proxy_buffering off; 
  # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' img-src 'self' style-src 'self' 'unsafe-inline' font-src 'self' frame-src object-src 'none'";
  
  
  #limit_req_zone $binary_remote_addr zone=one:10m rate=120r/m;

  server {
    listen 443 ssl;
    server_name tacticalmastery.com;
    if ($blockedagent) {
      return 403;
    }
    if ($request_method !~ ^(GET|HEAD|POST)$) {
      return 444;
    }
    location /api/ {
      #limit_req zone=one;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $http_host;
      proxy_pass http://node-app/api/;
      add_header Cache-Control "no-store";
      expires -1;
    }
    location /tacticalsales/ {
      proxy_cache STATIC;
      proxy_cache_bypass $http_cache_control;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $http_host;
      add_header X-Proxy-Cache $upstream_cache_status;
#      proxy_ignore_headers "Set-Cookie";
#      proxy_hide_header "Set-Cookie"; 
      proxy_pass http://node-app;
      expires 60;


      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        #
        # Om nom nom cookies
        #
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #
        # Custom headers and headers various browsers **should** be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
      if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      }
      if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      }
    }

    location / {
      rewrite      ^ https://www.tacticalmastery.com$request_uri? redirect;
    }

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.key;

    ssl_session_cache shared:SSL:10m;

    ssl_dhparam /etc/nginx/dhparam.pem;
    #https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    #https://habrahabr.ru/post/252821/
    #Generate using `openssl dhparam -out dhparam.pem 4096` - it takes loooong time ~ 10 minutes and makes your laptop warm
    #data generated by Anatolij is included in code
  }

  server {
    listen 443 ssl;
    server_name www.tacticalmastery.com;
    if ($blockedagent) {
      return 403;
    }
    if ($request_method !~ ^(GET|HEAD|POST)$) {
      return 444;
    }
    location / {
      proxy_cache STATIC;
      proxy_cache_bypass $http_cache_control;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $http_host;
      add_header X-Proxy-Cache $upstream_cache_status;
#      proxy_ignore_headers "Set-Cookie";
#      proxy_hide_header "Set-Cookie"; 
      proxy_pass http://wp;
      expires 60;

    }
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.key;

    ssl_session_cache shared:SSL:10m;

    ssl_dhparam /etc/nginx/dhparam.pem;
    #https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    #https://habrahabr.ru/post/252821/
    #Generate using `openssl dhparam -out dhparam.pem 4096` - it takes loooong time ~ 10 minutes and makes your laptop warm
    #data generated by Anatolij is included in code
  }

  # redirect all http request to https
  server {
    listen       80;
    server_name  tacticalmastery.com www.tacticalmastery.com;
    rewrite      ^/tacticalsales$ https://tacticalmastery.com$request_uri? redirect;
    rewrite      ^ https://www.tacticalmastery.com$request_uri? redirect;
  }
}